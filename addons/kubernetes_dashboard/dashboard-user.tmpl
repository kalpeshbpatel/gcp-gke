apiVersion: v1
kind: ServiceAccount
metadata:
  name: admin-user
  namespace: ${namespace}
secrets:
  - name: admin-user-token

---
apiVersion: v1
kind: Secret
type: kubernetes.io/service-account-token
metadata:
  name: admin-user-token
  namespace: ${namespace}
  annotations:
    kubernetes.io/service-account.name: 'admin-user'

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: admin-user
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
  - kind: ServiceAccount
    name: admin-user
    namespace: ${namespace}

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: read-only
  namespace: ${namespace}
secrets:
  - name: read-only-token

---
apiVersion: v1
kind: Secret
type: kubernetes.io/service-account-token
metadata:
  name: read-only-token
  namespace: ${namespace}
  annotations:
    kubernetes.io/service-account.name: 'read-only'

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: read-only
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: view
subjects:
  - kind: ServiceAccount
    name: read-only
    namespace: ${namespace}
